plantuml
@startuml
class ConfigurationReader {
  - properties: Properties
  - environment: String
  + setEnvironment(environment: String)
  + getProperty(key: String): String
  + getEnvProperty(key: String): String
}

class LoggerUtil {
  + getLogger(clazz: Class): Logger
}

class ElementHandler {
  - page: Page
  + clickElement(locator: Locator)
  + enterText(locator: Locator, text: String)
  + waitForLocatorToLoad(locator: Locator)
  + waitForPageToLoad(loadState: LoadState)
  + isSelectorPresent(selector: String): boolean
  + assertLocatorIsVisible(locator: Locator)
  + assertLocatorHasText(locator: Locator, expectedText: String)
}

class LoginPage {
  - page: Page
  - elementHandler: ElementHandler
  + navigateToLoginPage(url: String)
  + enterUsername(username: String)
  + enterPassword(password: String)
  + clickLoginButton()
  + login(username: String, password: String)
  + isErrorMessageDisplayed(): boolean
  + getErrorMessageText(): String
  + isUserLoggedIn(): boolean
}

class LoginSteps {
  - loginPage: LoginPage
  + i_am_on_the_login_page()
  + i_enter_username_and_password(username: String, password: String)
  + i_click_the_login_button()
  + i_should_be_logged_in_successfully()
  + i_should_see_an_error_message(expectedErrorMessage: String)
}

class PlaywrightHooks {
  - tlPlaywright: ThreadLocal<Playwright>
  - tlBrowser: ThreadLocal<Browser>
  - tlBrowserContext: ThreadLocal<BrowserContext>
  - tlPage: ThreadLocal<Page>
  + initDriver()
  + getPlaywright(): Playwright
  + getBrowser(): Browser
  + getBrowserContext(): BrowserContext
  + getPage(): Page
  + closeDriver()
}

class ScenarioContext {
  - page: Page
  + setPage(page: Page)
  + getPage(): Page
}

class Hooks {
  - scenarioContext: ScenarioContext
  + setup(scenario: Scenario)
  + afterStep(scenario: Scenario)
  + tearDown(scenario: Scenario)
}

class TestRunner {
  - scenarios(): Object[][]
  - setUp(environment: String)
}

LoginPage --> ElementHandler : uses
LoginSteps --> LoginPage : uses
PlaywrightHooks --> ScenarioContext : uses
ElementHandler --> PlaywrightHooks : uses
TestRunner --> PlaywrightHooks : uses
LoginSteps --> ConfigurationReader : uses
Hooks --> PlaywrightHooks : uses
Hooks --> ScenarioContext : uses
@enduml